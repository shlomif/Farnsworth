Warnings:
---------
Unused terminals:

	FUNCCALL, declared line 17
	IFNONL, declared line 14


Conflicts:
----------
Conflict in state 29 between rule 61 and token '-' resolved as reduce.
Conflict in state 29 between rule 61 and token 'conforms' resolved as reduce.
Conflict in state 29 between rule 61 and token '<' resolved as reduce.
Conflict in state 29 between rule 61 and token '%' resolved as reduce.
Conflict in state 29 between rule 61 and token '==' resolved as reduce.
Conflict in state 29 between rule 61 and token '>=' resolved as reduce.
Conflict in state 29 between rule 61 and token ' ' resolved as reduce.
Conflict in state 29 between rule 61 and token '*' resolved as reduce.
Conflict in state 29 between rule 61 and token '||' resolved as reduce.
Conflict in state 29 between rule 61 and token '->' resolved as reduce.
Conflict in state 29 between rule 61 and token '=>' resolved as reduce.
Conflict in state 29 between rule 61 and token '<=' resolved as reduce.
Conflict in state 29 between rule 61 and token '>' resolved as reduce.
Conflict in state 29 between rule 61 and token '**' resolved as shift.
Conflict in state 29 between rule 61 and token '+' resolved as reduce.
Conflict in state 29 between rule 61 and token '^' resolved as shift.
Conflict in state 29 between rule 61 and token 'per' resolved as reduce.
Conflict in state 29 between rule 61 and token '!=' resolved as reduce.
Conflict in state 29 between rule 61 and token '?' resolved as reduce.
Conflict in state 29 between rule 61 and token '&&' resolved as reduce.
Conflict in state 29 between rule 61 and token '^^' resolved as reduce.
Conflict in state 29 between rule 61 and token '/' resolved as reduce.
Conflict in state 29 between rule 61 and token '=' resolved as reduce.
Conflict in state 29 between rule 61 and token '<=>' resolved as reduce.
Conflict in state 82 between rule 64 and token '-' resolved as reduce.
Conflict in state 82 between rule 64 and token 'conforms' resolved as reduce.
Conflict in state 82 between rule 64 and token '<' resolved as reduce.
Conflict in state 82 between rule 64 and token '%' resolved as shift.
Conflict in state 82 between rule 64 and token '==' resolved as reduce.
Conflict in state 82 between rule 64 and token '>=' resolved as reduce.
Conflict in state 82 between rule 64 and token ' ' resolved as shift.
Conflict in state 82 between rule 64 and token '*' resolved as shift.
Conflict in state 82 between rule 64 and token '||' resolved as reduce.
Conflict in state 82 between rule 64 and token '->' resolved as reduce.
Conflict in state 82 between rule 64 and token '=>' resolved as reduce.
Conflict in state 82 between rule 64 and token '<=' resolved as reduce.
Conflict in state 82 between rule 64 and token '>' resolved as reduce.
Conflict in state 82 between rule 64 and token '**' resolved as shift.
Conflict in state 82 between rule 64 and token '+' resolved as reduce.
Conflict in state 82 between rule 64 and token '^' resolved as shift.
Conflict in state 82 between rule 64 and token 'per' resolved as shift.
Conflict in state 82 between rule 64 and token '!=' resolved as reduce.
Conflict in state 82 between rule 64 and token '?' resolved as reduce.
Conflict in state 82 between rule 64 and token '&&' resolved as reduce.
Conflict in state 82 between rule 64 and token '^^' resolved as reduce.
Conflict in state 82 between rule 64 and token '/' resolved as shift.
Conflict in state 82 between rule 64 and token '=' resolved as reduce.
Conflict in state 82 between rule 64 and token '<=>' resolved as reduce.
Conflict in state 83 between rule 70 and token '-' resolved as shift.
Conflict in state 83 between rule 70 and token 'conforms' resolved as reduce.
Conflict in state 83 between rule 70 and token '<' resolved as shift.
Conflict in state 83 between rule 70 and token '%' resolved as shift.
Conflict in state 83 between rule 70 and token '==' resolved as shift.
Conflict in state 83 between rule 70 and token '>=' resolved as shift.
Conflict in state 83 between rule 70 and token ' ' resolved as shift.
Conflict in state 83 between rule 70 and token '*' resolved as shift.
Conflict in state 83 between rule 70 and token '||' resolved as reduce.
Conflict in state 83 between rule 70 and token '->' resolved as reduce.
Conflict in state 83 between rule 70 and token '=>' resolved as reduce.
Conflict in state 83 between rule 70 and token '<=' resolved as shift.
Conflict in state 83 between rule 70 and token '>' resolved as shift.
Conflict in state 83 between rule 70 and token '**' resolved as shift.
Conflict in state 83 between rule 70 and token '+' resolved as shift.
Conflict in state 83 between rule 70 and token '^' resolved as shift.
Conflict in state 83 between rule 70 and token 'per' resolved as shift.
Conflict in state 83 between rule 70 and token '!=' resolved as shift.
Conflict in state 83 between rule 70 and token '?' resolved as reduce.
Conflict in state 83 between rule 70 and token '&&' resolved as reduce.
Conflict in state 83 between rule 70 and token '^^' resolved as reduce.
Conflict in state 83 between rule 70 and token '/' resolved as shift.
Conflict in state 83 between rule 70 and token '=' resolved as reduce.
Conflict in state 83 between rule 70 and token '<=>' resolved as shift.
Conflict in state 84 between rule 44 and token '-' resolved as shift.
Conflict in state 84 between rule 44 and token 'conforms' resolved as reduce.
Conflict in state 84 between rule 44 and token '<' resolved as error.
Conflict in state 84 between rule 44 and token '%' resolved as shift.
Conflict in state 84 between rule 44 and token '==' resolved as error.
Conflict in state 84 between rule 44 and token '>=' resolved as error.
Conflict in state 84 between rule 44 and token ' ' resolved as shift.
Conflict in state 84 between rule 44 and token '*' resolved as shift.
Conflict in state 84 between rule 44 and token '||' resolved as reduce.
Conflict in state 84 between rule 44 and token '->' resolved as reduce.
Conflict in state 84 between rule 44 and token '=>' resolved as reduce.
Conflict in state 84 between rule 44 and token '<=' resolved as error.
Conflict in state 84 between rule 44 and token '>' resolved as error.
Conflict in state 84 between rule 44 and token '**' resolved as shift.
Conflict in state 84 between rule 44 and token '+' resolved as shift.
Conflict in state 84 between rule 44 and token '^' resolved as shift.
Conflict in state 84 between rule 44 and token 'per' resolved as shift.
Conflict in state 84 between rule 44 and token '!=' resolved as error.
Conflict in state 84 between rule 44 and token '?' resolved as reduce.
Conflict in state 84 between rule 44 and token '&&' resolved as reduce.
Conflict in state 84 between rule 44 and token '^^' resolved as reduce.
Conflict in state 84 between rule 44 and token '/' resolved as shift.
Conflict in state 84 between rule 44 and token '=' resolved as reduce.
Conflict in state 84 between rule 44 and token '<=>' resolved as error.
Conflict in state 85 between rule 69 and token '-' resolved as reduce.
Conflict in state 85 between rule 69 and token 'conforms' resolved as reduce.
Conflict in state 85 between rule 69 and token '<' resolved as reduce.
Conflict in state 85 between rule 69 and token '%' resolved as reduce.
Conflict in state 85 between rule 69 and token '==' resolved as reduce.
Conflict in state 85 between rule 69 and token '>=' resolved as reduce.
Conflict in state 85 between rule 69 and token ' ' resolved as reduce.
Conflict in state 85 between rule 69 and token '*' resolved as reduce.
Conflict in state 85 between rule 69 and token '||' resolved as reduce.
Conflict in state 85 between rule 69 and token '->' resolved as reduce.
Conflict in state 85 between rule 69 and token '=>' resolved as reduce.
Conflict in state 85 between rule 69 and token '<=' resolved as reduce.
Conflict in state 85 between rule 69 and token '>' resolved as reduce.
Conflict in state 85 between rule 69 and token '**' resolved as shift.
Conflict in state 85 between rule 69 and token '+' resolved as reduce.
Conflict in state 85 between rule 69 and token '^' resolved as shift.
Conflict in state 85 between rule 69 and token 'per' resolved as reduce.
Conflict in state 85 between rule 69 and token '!=' resolved as reduce.
Conflict in state 85 between rule 69 and token '?' resolved as reduce.
Conflict in state 85 between rule 69 and token '&&' resolved as reduce.
Conflict in state 85 between rule 69 and token '^^' resolved as reduce.
Conflict in state 85 between rule 69 and token '/' resolved as reduce.
Conflict in state 85 between rule 69 and token '=' resolved as reduce.
Conflict in state 85 between rule 69 and token '<=>' resolved as reduce.
Conflict in state 86 between rule 63 and token '-' resolved as reduce.
Conflict in state 86 between rule 63 and token 'conforms' resolved as reduce.
Conflict in state 86 between rule 63 and token '<' resolved as reduce.
Conflict in state 86 between rule 63 and token '%' resolved as shift.
Conflict in state 86 between rule 63 and token '==' resolved as reduce.
Conflict in state 86 between rule 63 and token '>=' resolved as reduce.
Conflict in state 86 between rule 63 and token ' ' resolved as shift.
Conflict in state 86 between rule 63 and token '*' resolved as shift.
Conflict in state 86 between rule 63 and token '||' resolved as reduce.
Conflict in state 86 between rule 63 and token '->' resolved as reduce.
Conflict in state 86 between rule 63 and token '=>' resolved as reduce.
Conflict in state 86 between rule 63 and token '<=' resolved as reduce.
Conflict in state 86 between rule 63 and token '>' resolved as reduce.
Conflict in state 86 between rule 63 and token '**' resolved as shift.
Conflict in state 86 between rule 63 and token '+' resolved as reduce.
Conflict in state 86 between rule 63 and token '^' resolved as shift.
Conflict in state 86 between rule 63 and token 'per' resolved as shift.
Conflict in state 86 between rule 63 and token '!=' resolved as reduce.
Conflict in state 86 between rule 63 and token '?' resolved as reduce.
Conflict in state 86 between rule 63 and token '&&' resolved as reduce.
Conflict in state 86 between rule 63 and token '^^' resolved as reduce.
Conflict in state 86 between rule 63 and token '/' resolved as shift.
Conflict in state 86 between rule 63 and token '=' resolved as reduce.
Conflict in state 86 between rule 63 and token '<=>' resolved as reduce.
Conflict in state 87 between rule 67 and token '-' resolved as reduce.
Conflict in state 87 between rule 67 and token 'conforms' resolved as reduce.
Conflict in state 87 between rule 67 and token '<' resolved as reduce.
Conflict in state 87 between rule 67 and token '%' resolved as reduce.
Conflict in state 87 between rule 67 and token '==' resolved as reduce.
Conflict in state 87 between rule 67 and token '>=' resolved as reduce.
Conflict in state 87 between rule 67 and token ' ' resolved as reduce.
Conflict in state 87 between rule 67 and token '*' resolved as reduce.
Conflict in state 87 between rule 67 and token '||' resolved as reduce.
Conflict in state 87 between rule 67 and token '->' resolved as reduce.
Conflict in state 87 between rule 67 and token '=>' resolved as reduce.
Conflict in state 87 between rule 67 and token '<=' resolved as reduce.
Conflict in state 87 between rule 67 and token '>' resolved as reduce.
Conflict in state 87 between rule 67 and token '**' resolved as shift.
Conflict in state 87 between rule 67 and token '+' resolved as reduce.
Conflict in state 87 between rule 67 and token '^' resolved as shift.
Conflict in state 87 between rule 67 and token 'per' resolved as reduce.
Conflict in state 87 between rule 67 and token '!=' resolved as reduce.
Conflict in state 87 between rule 67 and token '?' resolved as reduce.
Conflict in state 87 between rule 67 and token '&&' resolved as reduce.
Conflict in state 87 between rule 67 and token '^^' resolved as reduce.
Conflict in state 87 between rule 67 and token '/' resolved as reduce.
Conflict in state 87 between rule 67 and token '=' resolved as reduce.
Conflict in state 87 between rule 67 and token '<=>' resolved as reduce.
Conflict in state 88 between rule 48 and token '-' resolved as shift.
Conflict in state 88 between rule 48 and token 'conforms' resolved as reduce.
Conflict in state 88 between rule 48 and token '<' resolved as error.
Conflict in state 88 between rule 48 and token '%' resolved as shift.
Conflict in state 88 between rule 48 and token '==' resolved as error.
Conflict in state 88 between rule 48 and token '>=' resolved as error.
Conflict in state 88 between rule 48 and token ' ' resolved as shift.
Conflict in state 88 between rule 48 and token '*' resolved as shift.
Conflict in state 88 between rule 48 and token '||' resolved as reduce.
Conflict in state 88 between rule 48 and token '->' resolved as reduce.
Conflict in state 88 between rule 48 and token '=>' resolved as reduce.
Conflict in state 88 between rule 48 and token '<=' resolved as error.
Conflict in state 88 between rule 48 and token '>' resolved as error.
Conflict in state 88 between rule 48 and token '**' resolved as shift.
Conflict in state 88 between rule 48 and token '+' resolved as shift.
Conflict in state 88 between rule 48 and token '^' resolved as shift.
Conflict in state 88 between rule 48 and token 'per' resolved as shift.
Conflict in state 88 between rule 48 and token '!=' resolved as error.
Conflict in state 88 between rule 48 and token '?' resolved as reduce.
Conflict in state 88 between rule 48 and token '&&' resolved as reduce.
Conflict in state 88 between rule 48 and token '^^' resolved as reduce.
Conflict in state 88 between rule 48 and token '/' resolved as shift.
Conflict in state 88 between rule 48 and token '=' resolved as reduce.
Conflict in state 88 between rule 48 and token '<=>' resolved as error.
Conflict in state 89 between rule 47 and token '-' resolved as shift.
Conflict in state 89 between rule 47 and token 'conforms' resolved as reduce.
Conflict in state 89 between rule 47 and token '<' resolved as error.
Conflict in state 89 between rule 47 and token '%' resolved as shift.
Conflict in state 89 between rule 47 and token '==' resolved as error.
Conflict in state 89 between rule 47 and token '>=' resolved as error.
Conflict in state 89 between rule 47 and token ' ' resolved as shift.
Conflict in state 89 between rule 47 and token '*' resolved as shift.
Conflict in state 89 between rule 47 and token '||' resolved as reduce.
Conflict in state 89 between rule 47 and token '->' resolved as reduce.
Conflict in state 89 between rule 47 and token '=>' resolved as reduce.
Conflict in state 89 between rule 47 and token '<=' resolved as error.
Conflict in state 89 between rule 47 and token '>' resolved as error.
Conflict in state 89 between rule 47 and token '**' resolved as shift.
Conflict in state 89 between rule 47 and token '+' resolved as shift.
Conflict in state 89 between rule 47 and token '^' resolved as shift.
Conflict in state 89 between rule 47 and token 'per' resolved as shift.
Conflict in state 89 between rule 47 and token '!=' resolved as error.
Conflict in state 89 between rule 47 and token '?' resolved as reduce.
Conflict in state 89 between rule 47 and token '&&' resolved as reduce.
Conflict in state 89 between rule 47 and token '^^' resolved as reduce.
Conflict in state 89 between rule 47 and token '/' resolved as shift.
Conflict in state 89 between rule 47 and token '=' resolved as reduce.
Conflict in state 89 between rule 47 and token '<=>' resolved as error.
Conflict in state 90 between rule 68 and token '-' resolved as reduce.
Conflict in state 90 between rule 68 and token 'conforms' resolved as reduce.
Conflict in state 90 between rule 68 and token '<' resolved as reduce.
Conflict in state 90 between rule 68 and token '%' resolved as reduce.
Conflict in state 90 between rule 68 and token '==' resolved as reduce.
Conflict in state 90 between rule 68 and token '>=' resolved as reduce.
Conflict in state 90 between rule 68 and token ' ' resolved as reduce.
Conflict in state 90 between rule 68 and token '*' resolved as reduce.
Conflict in state 90 between rule 68 and token '||' resolved as reduce.
Conflict in state 90 between rule 68 and token '->' resolved as reduce.
Conflict in state 90 between rule 68 and token '=>' resolved as reduce.
Conflict in state 90 between rule 68 and token '<=' resolved as reduce.
Conflict in state 90 between rule 68 and token '>' resolved as reduce.
Conflict in state 90 between rule 68 and token '**' resolved as shift.
Conflict in state 90 between rule 68 and token '+' resolved as reduce.
Conflict in state 90 between rule 68 and token '^' resolved as shift.
Conflict in state 90 between rule 68 and token 'per' resolved as reduce.
Conflict in state 90 between rule 68 and token '!=' resolved as reduce.
Conflict in state 90 between rule 68 and token '?' resolved as reduce.
Conflict in state 90 between rule 68 and token '&&' resolved as reduce.
Conflict in state 90 between rule 68 and token '^^' resolved as reduce.
Conflict in state 90 between rule 68 and token '/' resolved as reduce.
Conflict in state 90 between rule 68 and token '=' resolved as reduce.
Conflict in state 90 between rule 68 and token '<=>' resolved as reduce.
Conflict in state 91 between rule 39 and token '-' resolved as reduce.
Conflict in state 91 between rule 39 and token 'conforms' resolved as reduce.
Conflict in state 91 between rule 39 and token '<' resolved as reduce.
Conflict in state 91 between rule 39 and token '%' resolved as reduce.
Conflict in state 91 between rule 39 and token '==' resolved as reduce.
Conflict in state 91 between rule 39 and token '>=' resolved as reduce.
Conflict in state 91 between rule 39 and token ' ' resolved as reduce.
Conflict in state 91 between rule 39 and token '*' resolved as reduce.
Conflict in state 91 between rule 39 and token '||' resolved as reduce.
Conflict in state 91 between rule 39 and token '->' resolved as reduce.
Conflict in state 91 between rule 39 and token '=>' resolved as reduce.
Conflict in state 91 between rule 39 and token '<=' resolved as reduce.
Conflict in state 91 between rule 39 and token '>' resolved as reduce.
Conflict in state 91 between rule 39 and token '**' resolved as shift.
Conflict in state 91 between rule 39 and token '+' resolved as reduce.
Conflict in state 91 between rule 39 and token '^' resolved as shift.
Conflict in state 91 between rule 39 and token 'per' resolved as reduce.
Conflict in state 91 between rule 39 and token '!=' resolved as reduce.
Conflict in state 91 between rule 39 and token '?' resolved as reduce.
Conflict in state 91 between rule 39 and token '&&' resolved as reduce.
Conflict in state 91 between rule 39 and token '^^' resolved as reduce.
Conflict in state 91 between rule 39 and token '/' resolved as reduce.
Conflict in state 91 between rule 39 and token '=' resolved as reduce.
Conflict in state 91 between rule 39 and token '<=>' resolved as reduce.
Conflict in state 92 between rule 37 and token '-' resolved as reduce.
Conflict in state 92 between rule 37 and token 'conforms' resolved as reduce.
Conflict in state 92 between rule 37 and token '<' resolved as reduce.
Conflict in state 92 between rule 37 and token '%' resolved as reduce.
Conflict in state 92 between rule 37 and token '==' resolved as reduce.
Conflict in state 92 between rule 37 and token '>=' resolved as reduce.
Conflict in state 92 between rule 37 and token ' ' resolved as reduce.
Conflict in state 92 between rule 37 and token '*' resolved as reduce.
Conflict in state 92 between rule 37 and token '||' resolved as reduce.
Conflict in state 92 between rule 37 and token '->' resolved as reduce.
Conflict in state 92 between rule 37 and token '=>' resolved as reduce.
Conflict in state 92 between rule 37 and token '<=' resolved as reduce.
Conflict in state 92 between rule 37 and token '>' resolved as reduce.
Conflict in state 92 between rule 37 and token '**' resolved as shift.
Conflict in state 92 between rule 37 and token '+' resolved as reduce.
Conflict in state 92 between rule 37 and token '^' resolved as shift.
Conflict in state 92 between rule 37 and token 'per' resolved as reduce.
Conflict in state 92 between rule 37 and token '!=' resolved as reduce.
Conflict in state 92 between rule 37 and token '?' resolved as reduce.
Conflict in state 92 between rule 37 and token '&&' resolved as reduce.
Conflict in state 92 between rule 37 and token '^^' resolved as reduce.
Conflict in state 92 between rule 37 and token '/' resolved as reduce.
Conflict in state 92 between rule 37 and token '=' resolved as reduce.
Conflict in state 92 between rule 37 and token '<=>' resolved as reduce.
Conflict in state 93 between rule 66 and token '-' resolved as reduce.
Conflict in state 93 between rule 66 and token 'conforms' resolved as reduce.
Conflict in state 93 between rule 66 and token '<' resolved as reduce.
Conflict in state 93 between rule 66 and token '%' resolved as shift.
Conflict in state 93 between rule 66 and token '==' resolved as reduce.
Conflict in state 93 between rule 66 and token '>=' resolved as reduce.
Conflict in state 93 between rule 66 and token ' ' resolved as shift.
Conflict in state 93 between rule 66 and token '*' resolved as shift.
Conflict in state 93 between rule 66 and token '||' resolved as reduce.
Conflict in state 93 between rule 66 and token '->' resolved as reduce.
Conflict in state 93 between rule 66 and token '=>' resolved as reduce.
Conflict in state 93 between rule 66 and token '<=' resolved as reduce.
Conflict in state 93 between rule 66 and token '>' resolved as reduce.
Conflict in state 93 between rule 66 and token '**' resolved as shift.
Conflict in state 93 between rule 66 and token '+' resolved as reduce.
Conflict in state 93 between rule 66 and token '^' resolved as shift.
Conflict in state 93 between rule 66 and token 'per' resolved as reduce.
Conflict in state 93 between rule 66 and token '!=' resolved as reduce.
Conflict in state 93 between rule 66 and token '?' resolved as reduce.
Conflict in state 93 between rule 66 and token '&&' resolved as reduce.
Conflict in state 93 between rule 66 and token '^^' resolved as reduce.
Conflict in state 93 between rule 66 and token '/' resolved as shift.
Conflict in state 93 between rule 66 and token '=' resolved as reduce.
Conflict in state 93 between rule 66 and token '<=>' resolved as reduce.
Conflict in state 95 between rule 50 and token '-' resolved as shift.
Conflict in state 95 between rule 50 and token 'conforms' resolved as reduce.
Conflict in state 95 between rule 50 and token '<' resolved as error.
Conflict in state 95 between rule 50 and token '%' resolved as shift.
Conflict in state 95 between rule 50 and token '==' resolved as error.
Conflict in state 95 between rule 50 and token '>=' resolved as error.
Conflict in state 95 between rule 50 and token ' ' resolved as shift.
Conflict in state 95 between rule 50 and token '*' resolved as shift.
Conflict in state 95 between rule 50 and token '||' resolved as reduce.
Conflict in state 95 between rule 50 and token '->' resolved as reduce.
Conflict in state 95 between rule 50 and token '=>' resolved as reduce.
Conflict in state 95 between rule 50 and token '<=' resolved as error.
Conflict in state 95 between rule 50 and token '>' resolved as error.
Conflict in state 95 between rule 50 and token '**' resolved as shift.
Conflict in state 95 between rule 50 and token '+' resolved as shift.
Conflict in state 95 between rule 50 and token '^' resolved as shift.
Conflict in state 95 between rule 50 and token 'per' resolved as shift.
Conflict in state 95 between rule 50 and token '!=' resolved as error.
Conflict in state 95 between rule 50 and token '?' resolved as reduce.
Conflict in state 95 between rule 50 and token '&&' resolved as reduce.
Conflict in state 95 between rule 50 and token '^^' resolved as reduce.
Conflict in state 95 between rule 50 and token '/' resolved as shift.
Conflict in state 95 between rule 50 and token '=' resolved as reduce.
Conflict in state 95 between rule 50 and token '<=>' resolved as error.
Conflict in state 98 between rule 41 and token '-' resolved as shift.
Conflict in state 98 between rule 41 and token 'conforms' resolved as shift.
Conflict in state 98 between rule 41 and token '<' resolved as shift.
Conflict in state 98 between rule 41 and token '%' resolved as shift.
Conflict in state 98 between rule 41 and token '==' resolved as shift.
Conflict in state 98 between rule 41 and token '>=' resolved as shift.
Conflict in state 98 between rule 41 and token ' ' resolved as shift.
Conflict in state 98 between rule 41 and token '*' resolved as shift.
Conflict in state 98 between rule 41 and token '||' resolved as reduce.
Conflict in state 98 between rule 41 and token '->' resolved as reduce.
Conflict in state 98 between rule 41 and token '=>' resolved as reduce.
Conflict in state 98 between rule 41 and token '<=' resolved as shift.
Conflict in state 98 between rule 41 and token '>' resolved as shift.
Conflict in state 98 between rule 41 and token '**' resolved as shift.
Conflict in state 98 between rule 41 and token '+' resolved as shift.
Conflict in state 98 between rule 41 and token '^' resolved as shift.
Conflict in state 98 between rule 41 and token 'per' resolved as shift.
Conflict in state 98 between rule 41 and token '!=' resolved as shift.
Conflict in state 98 between rule 41 and token '?' resolved as reduce.
Conflict in state 98 between rule 41 and token '&&' resolved as reduce.
Conflict in state 98 between rule 41 and token '^^' resolved as reduce.
Conflict in state 98 between rule 41 and token '/' resolved as shift.
Conflict in state 98 between rule 41 and token '=' resolved as reduce.
Conflict in state 98 between rule 41 and token '<=>' resolved as shift.
Conflict in state 99 between rule 40 and token '-' resolved as shift.
Conflict in state 99 between rule 40 and token 'conforms' resolved as shift.
Conflict in state 99 between rule 40 and token '<' resolved as shift.
Conflict in state 99 between rule 40 and token '%' resolved as shift.
Conflict in state 99 between rule 40 and token '==' resolved as shift.
Conflict in state 99 between rule 40 and token '>=' resolved as shift.
Conflict in state 99 between rule 40 and token ' ' resolved as shift.
Conflict in state 99 between rule 40 and token '*' resolved as shift.
Conflict in state 99 between rule 40 and token '||' resolved as reduce.
Conflict in state 99 between rule 40 and token '->' resolved as reduce.
Conflict in state 99 between rule 40 and token '=>' resolved as reduce.
Conflict in state 99 between rule 40 and token '<=' resolved as shift.
Conflict in state 99 between rule 40 and token '>' resolved as shift.
Conflict in state 99 between rule 40 and token '**' resolved as shift.
Conflict in state 99 between rule 40 and token '+' resolved as shift.
Conflict in state 99 between rule 40 and token '^' resolved as shift.
Conflict in state 99 between rule 40 and token 'per' resolved as shift.
Conflict in state 99 between rule 40 and token '!=' resolved as shift.
Conflict in state 99 between rule 40 and token '?' resolved as reduce.
Conflict in state 99 between rule 40 and token '&&' resolved as reduce.
Conflict in state 99 between rule 40 and token '^^' resolved as reduce.
Conflict in state 99 between rule 40 and token '/' resolved as shift.
Conflict in state 99 between rule 40 and token '=' resolved as reduce.
Conflict in state 99 between rule 40 and token '<=>' resolved as shift.
Conflict in state 100 between rule 42 and token '-' resolved as shift.
Conflict in state 100 between rule 42 and token 'conforms' resolved as shift.
Conflict in state 100 between rule 42 and token '<' resolved as shift.
Conflict in state 100 between rule 42 and token '%' resolved as shift.
Conflict in state 100 between rule 42 and token '==' resolved as shift.
Conflict in state 100 between rule 42 and token '>=' resolved as shift.
Conflict in state 100 between rule 42 and token ' ' resolved as shift.
Conflict in state 100 between rule 42 and token '*' resolved as shift.
Conflict in state 100 between rule 42 and token '||' resolved as reduce.
Conflict in state 100 between rule 42 and token '->' resolved as reduce.
Conflict in state 100 between rule 42 and token '=>' resolved as reduce.
Conflict in state 100 between rule 42 and token '<=' resolved as shift.
Conflict in state 100 between rule 42 and token '>' resolved as shift.
Conflict in state 100 between rule 42 and token '**' resolved as shift.
Conflict in state 100 between rule 42 and token '+' resolved as shift.
Conflict in state 100 between rule 42 and token '^' resolved as shift.
Conflict in state 100 between rule 42 and token 'per' resolved as shift.
Conflict in state 100 between rule 42 and token '!=' resolved as shift.
Conflict in state 100 between rule 42 and token '?' resolved as reduce.
Conflict in state 100 between rule 42 and token '&&' resolved as reduce.
Conflict in state 100 between rule 42 and token '^^' resolved as reduce.
Conflict in state 100 between rule 42 and token '/' resolved as shift.
Conflict in state 100 between rule 42 and token '=' resolved as reduce.
Conflict in state 100 between rule 42 and token '<=>' resolved as shift.
Conflict in state 101 between rule 80 and token '-' resolved as shift.
Conflict in state 101 between rule 80 and token 'conforms' resolved as shift.
Conflict in state 101 between rule 80 and token '<' resolved as shift.
Conflict in state 101 between rule 80 and token '%' resolved as shift.
Conflict in state 101 between rule 80 and token '==' resolved as shift.
Conflict in state 101 between rule 80 and token '>=' resolved as shift.
Conflict in state 101 between rule 80 and token ' ' resolved as shift.
Conflict in state 101 between rule 80 and token '*' resolved as shift.
Conflict in state 101 between rule 80 and token '||' resolved as shift.
Conflict in state 101 between rule 80 and token '->' resolved as reduce.
Conflict in state 101 between rule 80 and token '=>' resolved as reduce.
Conflict in state 101 between rule 80 and token '<=' resolved as shift.
Conflict in state 101 between rule 80 and token '>' resolved as shift.
Conflict in state 101 between rule 80 and token '**' resolved as shift.
Conflict in state 101 between rule 80 and token '+' resolved as shift.
Conflict in state 101 between rule 80 and token '^' resolved as shift.
Conflict in state 101 between rule 80 and token 'per' resolved as shift.
Conflict in state 101 between rule 80 and token '!=' resolved as shift.
Conflict in state 101 between rule 80 and token '?' resolved as shift.
Conflict in state 101 between rule 80 and token '&&' resolved as shift.
Conflict in state 101 between rule 80 and token '^^' resolved as shift.
Conflict in state 101 between rule 80 and token '/' resolved as shift.
Conflict in state 101 between rule 80 and token '=' resolved as reduce.
Conflict in state 101 between rule 80 and token '<=>' resolved as shift.
Conflict in state 102 between rule 65 and token '-' resolved as reduce.
Conflict in state 102 between rule 65 and token 'conforms' resolved as reduce.
Conflict in state 102 between rule 65 and token '<' resolved as reduce.
Conflict in state 102 between rule 65 and token '%' resolved as reduce.
Conflict in state 102 between rule 65 and token '==' resolved as reduce.
Conflict in state 102 between rule 65 and token '>=' resolved as reduce.
Conflict in state 102 between rule 65 and token ' ' resolved as reduce.
Conflict in state 102 between rule 65 and token '*' resolved as reduce.
Conflict in state 102 between rule 65 and token '||' resolved as reduce.
Conflict in state 102 between rule 65 and token '->' resolved as reduce.
Conflict in state 102 between rule 65 and token '=>' resolved as reduce.
Conflict in state 102 between rule 65 and token '<=' resolved as reduce.
Conflict in state 102 between rule 65 and token '>' resolved as reduce.
Conflict in state 102 between rule 65 and token '**' resolved as shift.
Conflict in state 102 between rule 65 and token '+' resolved as reduce.
Conflict in state 102 between rule 65 and token '^' resolved as shift.
Conflict in state 102 between rule 65 and token 'per' resolved as reduce.
Conflict in state 102 between rule 65 and token '!=' resolved as reduce.
Conflict in state 102 between rule 65 and token '?' resolved as reduce.
Conflict in state 102 between rule 65 and token '&&' resolved as reduce.
Conflict in state 102 between rule 65 and token '^^' resolved as reduce.
Conflict in state 102 between rule 65 and token '/' resolved as reduce.
Conflict in state 102 between rule 65 and token '=' resolved as reduce.
Conflict in state 102 between rule 65 and token '<=>' resolved as reduce.
Conflict in state 103 between rule 35 and token '-' resolved as shift.
Conflict in state 103 between rule 35 and token 'conforms' resolved as shift.
Conflict in state 103 between rule 35 and token '<' resolved as shift.
Conflict in state 103 between rule 35 and token '%' resolved as shift.
Conflict in state 103 between rule 35 and token '==' resolved as shift.
Conflict in state 103 between rule 35 and token '>=' resolved as shift.
Conflict in state 103 between rule 35 and token ' ' resolved as shift.
Conflict in state 103 between rule 35 and token '*' resolved as shift.
Conflict in state 103 between rule 35 and token '||' resolved as shift.
Conflict in state 103 between rule 35 and token '->' resolved as shift.
Conflict in state 103 between rule 35 and token '=>' resolved as shift.
Conflict in state 103 between rule 35 and token '<=' resolved as shift.
Conflict in state 103 between rule 35 and token '>' resolved as shift.
Conflict in state 103 between rule 35 and token '**' resolved as shift.
Conflict in state 103 between rule 35 and token '+' resolved as shift.
Conflict in state 103 between rule 35 and token '^' resolved as shift.
Conflict in state 103 between rule 35 and token 'per' resolved as shift.
Conflict in state 103 between rule 35 and token '!=' resolved as shift.
Conflict in state 103 between rule 35 and token '?' resolved as shift.
Conflict in state 103 between rule 35 and token '&&' resolved as shift.
Conflict in state 103 between rule 35 and token '^^' resolved as shift.
Conflict in state 103 between rule 35 and token '/' resolved as shift.
Conflict in state 103 between rule 35 and token '=' resolved as shift.
Conflict in state 103 between rule 35 and token '<=>' resolved as shift.
Conflict in state 104 between rule 79 and token '-' resolved as shift.
Conflict in state 104 between rule 79 and token 'conforms' resolved as shift.
Conflict in state 104 between rule 79 and token '<' resolved as shift.
Conflict in state 104 between rule 79 and token '%' resolved as shift.
Conflict in state 104 between rule 79 and token '==' resolved as shift.
Conflict in state 104 between rule 79 and token '>=' resolved as shift.
Conflict in state 104 between rule 79 and token ' ' resolved as shift.
Conflict in state 104 between rule 79 and token '*' resolved as shift.
Conflict in state 104 between rule 79 and token '||' resolved as shift.
Conflict in state 104 between rule 79 and token '->' resolved as reduce.
Conflict in state 104 between rule 79 and token '=>' resolved as reduce.
Conflict in state 104 between rule 79 and token '<=' resolved as shift.
Conflict in state 104 between rule 79 and token '>' resolved as shift.
Conflict in state 104 between rule 79 and token '**' resolved as shift.
Conflict in state 104 between rule 79 and token '+' resolved as shift.
Conflict in state 104 between rule 79 and token '^' resolved as shift.
Conflict in state 104 between rule 79 and token 'per' resolved as shift.
Conflict in state 104 between rule 79 and token '!=' resolved as shift.
Conflict in state 104 between rule 79 and token '?' resolved as shift.
Conflict in state 104 between rule 79 and token '&&' resolved as shift.
Conflict in state 104 between rule 79 and token '^^' resolved as shift.
Conflict in state 104 between rule 79 and token '/' resolved as shift.
Conflict in state 104 between rule 79 and token '=' resolved as reduce.
Conflict in state 104 between rule 79 and token '<=>' resolved as shift.
Conflict in state 105 between rule 49 and token '-' resolved as shift.
Conflict in state 105 between rule 49 and token 'conforms' resolved as reduce.
Conflict in state 105 between rule 49 and token '<' resolved as error.
Conflict in state 105 between rule 49 and token '%' resolved as shift.
Conflict in state 105 between rule 49 and token '==' resolved as error.
Conflict in state 105 between rule 49 and token '>=' resolved as error.
Conflict in state 105 between rule 49 and token ' ' resolved as shift.
Conflict in state 105 between rule 49 and token '*' resolved as shift.
Conflict in state 105 between rule 49 and token '||' resolved as reduce.
Conflict in state 105 between rule 49 and token '->' resolved as reduce.
Conflict in state 105 between rule 49 and token '=>' resolved as reduce.
Conflict in state 105 between rule 49 and token '<=' resolved as error.
Conflict in state 105 between rule 49 and token '>' resolved as error.
Conflict in state 105 between rule 49 and token '**' resolved as shift.
Conflict in state 105 between rule 49 and token '+' resolved as shift.
Conflict in state 105 between rule 49 and token '^' resolved as shift.
Conflict in state 105 between rule 49 and token 'per' resolved as shift.
Conflict in state 105 between rule 49 and token '!=' resolved as error.
Conflict in state 105 between rule 49 and token '?' resolved as reduce.
Conflict in state 105 between rule 49 and token '&&' resolved as reduce.
Conflict in state 105 between rule 49 and token '^^' resolved as reduce.
Conflict in state 105 between rule 49 and token '/' resolved as shift.
Conflict in state 105 between rule 49 and token '=' resolved as reduce.
Conflict in state 105 between rule 49 and token '<=>' resolved as error.
Conflict in state 106 between rule 46 and token '-' resolved as shift.
Conflict in state 106 between rule 46 and token 'conforms' resolved as reduce.
Conflict in state 106 between rule 46 and token '<' resolved as error.
Conflict in state 106 between rule 46 and token '%' resolved as shift.
Conflict in state 106 between rule 46 and token '==' resolved as error.
Conflict in state 106 between rule 46 and token '>=' resolved as error.
Conflict in state 106 between rule 46 and token ' ' resolved as shift.
Conflict in state 106 between rule 46 and token '*' resolved as shift.
Conflict in state 106 between rule 46 and token '||' resolved as reduce.
Conflict in state 106 between rule 46 and token '->' resolved as reduce.
Conflict in state 106 between rule 46 and token '=>' resolved as reduce.
Conflict in state 106 between rule 46 and token '<=' resolved as error.
Conflict in state 106 between rule 46 and token '>' resolved as error.
Conflict in state 106 between rule 46 and token '**' resolved as shift.
Conflict in state 106 between rule 46 and token '+' resolved as shift.
Conflict in state 106 between rule 46 and token '^' resolved as shift.
Conflict in state 106 between rule 46 and token 'per' resolved as shift.
Conflict in state 106 between rule 46 and token '!=' resolved as error.
Conflict in state 106 between rule 46 and token '?' resolved as reduce.
Conflict in state 106 between rule 46 and token '&&' resolved as reduce.
Conflict in state 106 between rule 46 and token '^^' resolved as reduce.
Conflict in state 106 between rule 46 and token '/' resolved as shift.
Conflict in state 106 between rule 46 and token '=' resolved as reduce.
Conflict in state 106 between rule 46 and token '<=>' resolved as error.
Conflict in state 107 between rule 45 and token '-' resolved as shift.
Conflict in state 107 between rule 45 and token 'conforms' resolved as reduce.
Conflict in state 107 between rule 45 and token '<' resolved as error.
Conflict in state 107 between rule 45 and token '%' resolved as shift.
Conflict in state 107 between rule 45 and token '==' resolved as error.
Conflict in state 107 between rule 45 and token '>=' resolved as error.
Conflict in state 107 between rule 45 and token ' ' resolved as shift.
Conflict in state 107 between rule 45 and token '*' resolved as shift.
Conflict in state 107 between rule 45 and token '||' resolved as reduce.
Conflict in state 107 between rule 45 and token '->' resolved as reduce.
Conflict in state 107 between rule 45 and token '=>' resolved as reduce.
Conflict in state 107 between rule 45 and token '<=' resolved as error.
Conflict in state 107 between rule 45 and token '>' resolved as error.
Conflict in state 107 between rule 45 and token '**' resolved as shift.
Conflict in state 107 between rule 45 and token '+' resolved as shift.
Conflict in state 107 between rule 45 and token '^' resolved as shift.
Conflict in state 107 between rule 45 and token 'per' resolved as shift.
Conflict in state 107 between rule 45 and token '!=' resolved as error.
Conflict in state 107 between rule 45 and token '?' resolved as reduce.
Conflict in state 107 between rule 45 and token '&&' resolved as reduce.
Conflict in state 107 between rule 45 and token '^^' resolved as reduce.
Conflict in state 107 between rule 45 and token '/' resolved as shift.
Conflict in state 107 between rule 45 and token '=' resolved as reduce.
Conflict in state 107 between rule 45 and token '<=>' resolved as error.
Conflict in state 119 between rule 74 and token '-' resolved as shift.
Conflict in state 119 between rule 74 and token 'conforms' resolved as shift.
Conflict in state 119 between rule 74 and token '<' resolved as shift.
Conflict in state 119 between rule 74 and token '%' resolved as shift.
Conflict in state 119 between rule 74 and token '==' resolved as shift.
Conflict in state 119 between rule 74 and token '>=' resolved as shift.
Conflict in state 119 between rule 74 and token ' ' resolved as shift.
Conflict in state 119 between rule 74 and token '*' resolved as shift.
Conflict in state 119 between rule 74 and token '||' resolved as shift.
Conflict in state 119 between rule 74 and token '->' resolved as shift.
Conflict in state 119 between rule 74 and token '=>' resolved as shift.
Conflict in state 119 between rule 74 and token '<=' resolved as shift.
Conflict in state 119 between rule 74 and token '>' resolved as shift.
Conflict in state 119 between rule 74 and token '**' resolved as shift.
Conflict in state 119 between rule 74 and token '+' resolved as shift.
Conflict in state 119 between rule 74 and token '^' resolved as shift.
Conflict in state 119 between rule 74 and token 'per' resolved as shift.
Conflict in state 119 between rule 74 and token '!=' resolved as shift.
Conflict in state 119 between rule 74 and token '?' resolved as shift.
Conflict in state 119 between rule 74 and token '&&' resolved as shift.
Conflict in state 119 between rule 74 and token '^^' resolved as shift.
Conflict in state 119 between rule 74 and token '/' resolved as shift.
Conflict in state 119 between rule 74 and token '=' resolved as shift.
Conflict in state 119 between rule 74 and token '<=>' resolved as shift.
Conflict in state 120 between rule 75 and token '-' resolved as shift.
Conflict in state 120 between rule 75 and token 'conforms' resolved as shift.
Conflict in state 120 between rule 75 and token '<' resolved as shift.
Conflict in state 120 between rule 75 and token '%' resolved as shift.
Conflict in state 120 between rule 75 and token '==' resolved as shift.
Conflict in state 120 between rule 75 and token '>=' resolved as shift.
Conflict in state 120 between rule 75 and token ' ' resolved as shift.
Conflict in state 120 between rule 75 and token '*' resolved as shift.
Conflict in state 120 between rule 75 and token '||' resolved as shift.
Conflict in state 120 between rule 75 and token '->' resolved as shift.
Conflict in state 120 between rule 75 and token '=>' resolved as shift.
Conflict in state 120 between rule 75 and token '<=' resolved as shift.
Conflict in state 120 between rule 75 and token '>' resolved as shift.
Conflict in state 120 between rule 75 and token '**' resolved as shift.
Conflict in state 120 between rule 75 and token '+' resolved as shift.
Conflict in state 120 between rule 75 and token '^' resolved as shift.
Conflict in state 120 between rule 75 and token 'per' resolved as shift.
Conflict in state 120 between rule 75 and token '!=' resolved as shift.
Conflict in state 120 between rule 75 and token '?' resolved as shift.
Conflict in state 120 between rule 75 and token '&&' resolved as shift.
Conflict in state 120 between rule 75 and token '^^' resolved as shift.
Conflict in state 120 between rule 75 and token '/' resolved as shift.
Conflict in state 120 between rule 75 and token '=' resolved as shift.
Conflict in state 120 between rule 75 and token '<=>' resolved as shift.
Conflict in state 143 between rule 71 and token '-' resolved as shift.
Conflict in state 143 between rule 71 and token 'conforms' resolved as shift.
Conflict in state 143 between rule 71 and token '<' resolved as shift.
Conflict in state 143 between rule 71 and token '%' resolved as shift.
Conflict in state 143 between rule 71 and token '==' resolved as shift.
Conflict in state 143 between rule 71 and token '>=' resolved as shift.
Conflict in state 143 between rule 71 and token ' ' resolved as shift.
Conflict in state 143 between rule 71 and token '*' resolved as shift.
Conflict in state 143 between rule 71 and token '||' resolved as shift.
Conflict in state 143 between rule 71 and token '->' resolved as reduce.
Conflict in state 143 between rule 71 and token '=>' resolved as reduce.
Conflict in state 143 between rule 71 and token '<=' resolved as shift.
Conflict in state 143 between rule 71 and token '>' resolved as shift.
Conflict in state 143 between rule 71 and token '**' resolved as shift.
Conflict in state 143 between rule 71 and token '+' resolved as shift.
Conflict in state 143 between rule 71 and token '^' resolved as shift.
Conflict in state 143 between rule 71 and token 'per' resolved as shift.
Conflict in state 143 between rule 71 and token '!=' resolved as shift.
Conflict in state 143 between rule 71 and token '?' resolved as shift.
Conflict in state 143 between rule 71 and token '&&' resolved as shift.
Conflict in state 143 between rule 71 and token '^^' resolved as shift.
Conflict in state 143 between rule 71 and token '/' resolved as shift.
Conflict in state 143 between rule 71 and token '=' resolved as reduce.
Conflict in state 143 between rule 71 and token '<=>' resolved as shift.
Conflict in state 150 between rule 76 and token '-' resolved as shift.
Conflict in state 150 between rule 76 and token 'conforms' resolved as shift.
Conflict in state 150 between rule 76 and token '<' resolved as shift.
Conflict in state 150 between rule 76 and token '%' resolved as shift.
Conflict in state 150 between rule 76 and token '==' resolved as shift.
Conflict in state 150 between rule 76 and token '>=' resolved as shift.
Conflict in state 150 between rule 76 and token ' ' resolved as shift.
Conflict in state 150 between rule 76 and token '*' resolved as shift.
Conflict in state 150 between rule 76 and token '||' resolved as shift.
Conflict in state 150 between rule 76 and token '->' resolved as shift.
Conflict in state 150 between rule 76 and token '=>' resolved as shift.
Conflict in state 150 between rule 76 and token '<=' resolved as shift.
Conflict in state 150 between rule 76 and token '>' resolved as shift.
Conflict in state 150 between rule 76 and token '**' resolved as shift.
Conflict in state 150 between rule 76 and token '+' resolved as shift.
Conflict in state 150 between rule 76 and token '^' resolved as shift.
Conflict in state 150 between rule 76 and token 'per' resolved as shift.
Conflict in state 150 between rule 76 and token '!=' resolved as shift.
Conflict in state 150 between rule 76 and token '?' resolved as shift.
Conflict in state 150 between rule 76 and token '&&' resolved as shift.
Conflict in state 150 between rule 76 and token '^^' resolved as shift.
Conflict in state 150 between rule 76 and token '/' resolved as shift.
Conflict in state 150 between rule 76 and token '=' resolved as shift.
Conflict in state 150 between rule 76 and token '<=>' resolved as shift.

Rules:
------
0:	$start -> stma $end
1:	stma -> /* empty */
2:	stma -> stmt
3:	stma -> stmt ';' stma
4:	stmt -> expr
5:	stmt -> 'var' NAME
6:	stmt -> 'var' NAME '=' expr
7:	stmt -> NAME ':=' expr
8:	stmt -> expr ':->' expr
9:	stmt -> NAME '=!=' NAME
10:	stmt -> expr '|||' NAME
11:	stmt -> if
12:	stmt -> while
13:	ifstartcond -> 'if' '(' expr ')'
14:	ifstmts -> '{' stma '}'
15:	if -> ifstartcond ifstmts
16:	if -> ifstartcond ifstmts 'else' ifstmts
17:	while -> 'while' '(' expr ')' '{' stma '}'
18:	array -> expr ',' array
19:	array -> expr
20:	array -> /* empty */
21:	array -> ',' array
22:	constraint -> expr
23:	constraint -> '...'
24:	argelement -> NAME '=' expr 'isa' constraint
25:	argelement -> NAME 'isa' constraint
26:	argelement -> NAME '=' expr
27:	argelement -> NAME
28:	argelement -> NAME 'byref' 'isa' constraint
29:	argelement -> NAME 'byref'
30:	argelement -> /* empty */
31:	arglist -> argelement ',' arglist
32:	arglist -> argelement
33:	number -> NUMBER
34:	number -> HEXNUMBER
35:	assignexpr -> expr '=' expr
36:	lambda -> '{`' arglist '`' stma '}'
37:	multexpr -> expr '*' expr
38:	multexpr -> singleval singleval
39:	multexpr -> expr ' ' expr
40:	logic -> expr '&&' expr
41:	logic -> expr '||' expr
42:	logic -> expr '^^' expr
43:	logic -> '!' exprval
44:	compare -> expr '<' expr
45:	compare -> expr '>' expr
46:	compare -> expr '<=' expr
47:	compare -> expr '>=' expr
48:	compare -> expr '==' expr
49:	compare -> expr '<=>' expr
50:	compare -> expr '!=' expr
51:	value -> number
52:	value -> DATE
53:	value -> STRING
54:	value -> singleval '@' array '$'
55:	value -> NAME
56:	value -> '[' array ']'
57:	parens -> '(' expr ')'
58:	singleval -> value
59:	singleval -> parens
60:	expr -> singleval
61:	expr -> '-' expr
62:	expr -> multexpr
63:	expr -> expr '+' expr
64:	expr -> expr '-' expr
65:	expr -> expr '/' expr
66:	expr -> expr 'per' expr
67:	expr -> expr '%' expr
68:	expr -> expr '^' expr
69:	expr -> expr '**' expr
70:	expr -> expr 'conforms' expr
71:	expr -> expr '?' expr ':' expr
72:	expr -> logic
73:	expr -> compare
74:	expr -> NAME '::-' expr
75:	expr -> NAME ':-' expr
76:	expr -> NAME '{' arglist '}' ':=' expr
77:	expr -> NAME '{' arglist '}' ':=' '{' stma '}'
78:	expr -> lambda
79:	expr -> expr '=>' expr
80:	expr -> expr '->' expr
81:	expr -> assignexpr

States:
-------
State 0:

	$start -> . stma $end	(Rule 0)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'if'	shift, and go to state 11
	'var'	shift, and go to state 21
	'while'	shift, and go to state 23
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 18
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 1 (stma)

	compare	go to state 1
	singleval	go to state 3
	stma	go to state 19
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	ifstartcond	go to state 22
	if	go to state 9
	assignexpr	go to state 7
	stmt	go to state 24
	parens	go to state 10
	while	go to state 26
	expr	go to state 13
	multexpr	go to state 14
	logic	go to state 28

State 1:

	expr -> compare .	(Rule 73)

	$default	reduce using rule 73 (expr)

State 2:

	expr -> '-' . expr	(Rule 61)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 29
	multexpr	go to state 14
	logic	go to state 28

State 3:

	multexpr -> singleval . singleval	(Rule 38)
	value -> singleval . '@' array '$'	(Rule 54)
	expr -> singleval .	(Rule 60)

	'('	shift, and go to state 25
	'@'	shift, and go to state 32
	'['	shift, and go to state 15
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 33
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 60 (expr)

	parens	go to state 10
	singleval	go to state 31
	number	go to state 5
	value	go to state 20

State 4:

	expr -> lambda .	(Rule 78)

	$default	reduce using rule 78 (expr)

State 5:

	value -> number .	(Rule 51)

	$default	reduce using rule 51 (value)

State 6:

	value -> DATE .	(Rule 52)

	$default	reduce using rule 52 (value)

State 7:

	expr -> assignexpr .	(Rule 81)

	$default	reduce using rule 81 (expr)

State 8:

	value -> STRING .	(Rule 53)

	$default	reduce using rule 53 (value)

State 9:

	stmt -> if .	(Rule 11)

	$default	reduce using rule 11 (stmt)

State 10:

	singleval -> parens .	(Rule 59)

	$default	reduce using rule 59 (singleval)

State 11:

	ifstartcond -> 'if' . '(' expr ')'	(Rule 13)

	'('	shift, and go to state 34

State 12:

	logic -> '!' . exprval	(Rule 43)

	exprval	shift, and go to state 35

State 13:

	stmt -> expr .	(Rule 4)
	stmt -> expr . ':->' expr	(Rule 8)
	stmt -> expr . '|||' NAME	(Rule 10)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	':->'	shift, and go to state 48
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52
	'|||'	shift, and go to state 50

	$default	reduce using rule 4 (stmt)

State 14:

	expr -> multexpr .	(Rule 62)

	$default	reduce using rule 62 (expr)

State 15:

	value -> '[' . array ']'	(Rule 56)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	','	shift, and go to state 62
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 20 (array)

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	array	go to state 63
	expr	go to state 64
	multexpr	go to state 14
	logic	go to state 28

State 16:

	number -> NUMBER .	(Rule 33)

	$default	reduce using rule 33 (number)

State 17:

	lambda -> '{`' . arglist '`' stma '}'	(Rule 36)

	NAME	shift, and go to state 66

	$default	reduce using rule 30 (argelement)

	arglist	go to state 67
	argelement	go to state 65

State 18:

	stmt -> NAME . ':=' expr	(Rule 7)
	stmt -> NAME . '=!=' NAME	(Rule 9)
	value -> NAME .	(Rule 55)
	expr -> NAME . '::-' expr	(Rule 74)
	expr -> NAME . ':-' expr	(Rule 75)
	expr -> NAME . '{' arglist '}' ':=' expr	(Rule 76)
	expr -> NAME . '{' arglist '}' ':=' '{' stma '}'	(Rule 77)

	':-'	shift, and go to state 72
	'::-'	shift, and go to state 71
	':='	shift, and go to state 68
	'=!='	shift, and go to state 70
	'{'	shift, and go to state 69

	$default	reduce using rule 55 (value)

State 19:

	$start -> stma . $end	(Rule 0)

	$end	shift, and go to state 73

State 20:

	singleval -> value .	(Rule 58)

	$default	reduce using rule 58 (singleval)

State 21:

	stmt -> 'var' . NAME	(Rule 5)
	stmt -> 'var' . NAME '=' expr	(Rule 6)

	NAME	shift, and go to state 74

State 22:

	if -> ifstartcond . ifstmts	(Rule 15)
	if -> ifstartcond . ifstmts 'else' ifstmts	(Rule 16)

	'{'	shift, and go to state 75

	ifstmts	go to state 76

State 23:

	while -> 'while' . '(' expr ')' '{' stma '}'	(Rule 17)

	'('	shift, and go to state 77

State 24:

	stma -> stmt .	(Rule 2)
	stma -> stmt . ';' stma	(Rule 3)

	';'	shift, and go to state 78

	$default	reduce using rule 2 (stma)

State 25:

	parens -> '(' . expr ')'	(Rule 57)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 79
	multexpr	go to state 14
	logic	go to state 28

State 26:

	stmt -> while .	(Rule 12)

	$default	reduce using rule 12 (stmt)

State 27:

	number -> HEXNUMBER .	(Rule 34)

	$default	reduce using rule 34 (number)

State 28:

	expr -> logic .	(Rule 72)

	$default	reduce using rule 72 (expr)

State 29:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> '-' expr .	(Rule 61)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	'**'	shift, and go to state 39
	'^'	shift, and go to state 44

	$default	reduce using rule 61 (expr)

State 30:

	value -> NAME .	(Rule 55)
	expr -> NAME . '::-' expr	(Rule 74)
	expr -> NAME . ':-' expr	(Rule 75)
	expr -> NAME . '{' arglist '}' ':=' expr	(Rule 76)
	expr -> NAME . '{' arglist '}' ':=' '{' stma '}'	(Rule 77)

	':-'	shift, and go to state 72
	'::-'	shift, and go to state 71
	'{'	shift, and go to state 69

	$default	reduce using rule 55 (value)

State 31:

	multexpr -> singleval singleval .	(Rule 38)
	value -> singleval . '@' array '$'	(Rule 54)

	'@'	shift, and go to state 32

	$default	reduce using rule 38 (multexpr)

State 32:

	value -> singleval '@' . array '$'	(Rule 54)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	','	shift, and go to state 62
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 20 (array)

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	array	go to state 80
	expr	go to state 64
	multexpr	go to state 14
	logic	go to state 28

State 33:

	value -> NAME .	(Rule 55)

	$default	reduce using rule 55 (value)

State 34:

	ifstartcond -> 'if' '(' . expr ')'	(Rule 13)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 81
	multexpr	go to state 14
	logic	go to state 28

State 35:

	logic -> '!' exprval .	(Rule 43)

	$default	reduce using rule 43 (logic)

State 36:

	expr -> expr '-' . expr	(Rule 64)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 82
	multexpr	go to state 14
	logic	go to state 28

State 37:

	expr -> expr 'conforms' . expr	(Rule 70)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 83
	multexpr	go to state 14
	logic	go to state 28

State 38:

	compare -> expr '<' . expr	(Rule 44)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 84
	multexpr	go to state 14
	logic	go to state 28

State 39:

	expr -> expr '**' . expr	(Rule 69)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 85
	multexpr	go to state 14
	logic	go to state 28

State 40:

	expr -> expr '+' . expr	(Rule 63)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 86
	multexpr	go to state 14
	logic	go to state 28

State 41:

	expr -> expr '%' . expr	(Rule 67)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 87
	multexpr	go to state 14
	logic	go to state 28

State 42:

	compare -> expr '==' . expr	(Rule 48)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 88
	multexpr	go to state 14
	logic	go to state 28

State 43:

	compare -> expr '>=' . expr	(Rule 47)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 89
	multexpr	go to state 14
	logic	go to state 28

State 44:

	expr -> expr '^' . expr	(Rule 68)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 90
	multexpr	go to state 14
	logic	go to state 28

State 45:

	multexpr -> expr ' ' . expr	(Rule 39)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 91
	multexpr	go to state 14
	logic	go to state 28

State 46:

	multexpr -> expr '*' . expr	(Rule 37)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 92
	multexpr	go to state 14
	logic	go to state 28

State 47:

	expr -> expr 'per' . expr	(Rule 66)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 93
	multexpr	go to state 14
	logic	go to state 28

State 48:

	stmt -> expr ':->' . expr	(Rule 8)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 94
	multexpr	go to state 14
	logic	go to state 28

State 49:

	compare -> expr '!=' . expr	(Rule 50)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 95
	multexpr	go to state 14
	logic	go to state 28

State 50:

	stmt -> expr '|||' . NAME	(Rule 10)

	NAME	shift, and go to state 96

State 51:

	expr -> expr '?' . expr ':' expr	(Rule 71)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 97
	multexpr	go to state 14
	logic	go to state 28

State 52:

	logic -> expr '||' . expr	(Rule 41)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 98
	multexpr	go to state 14
	logic	go to state 28

State 53:

	logic -> expr '&&' . expr	(Rule 40)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 99
	multexpr	go to state 14
	logic	go to state 28

State 54:

	logic -> expr '^^' . expr	(Rule 42)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 100
	multexpr	go to state 14
	logic	go to state 28

State 55:

	expr -> expr '->' . expr	(Rule 80)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 101
	multexpr	go to state 14
	logic	go to state 28

State 56:

	expr -> expr '/' . expr	(Rule 65)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 102
	multexpr	go to state 14
	logic	go to state 28

State 57:

	assignexpr -> expr '=' . expr	(Rule 35)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 103
	multexpr	go to state 14
	logic	go to state 28

State 58:

	expr -> expr '=>' . expr	(Rule 79)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 104
	multexpr	go to state 14
	logic	go to state 28

State 59:

	compare -> expr '<=>' . expr	(Rule 49)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 105
	multexpr	go to state 14
	logic	go to state 28

State 60:

	compare -> expr '<=' . expr	(Rule 46)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 106
	multexpr	go to state 14
	logic	go to state 28

State 61:

	compare -> expr '>' . expr	(Rule 45)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 107
	multexpr	go to state 14
	logic	go to state 28

State 62:

	array -> ',' . array	(Rule 21)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	','	shift, and go to state 62
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 20 (array)

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	array	go to state 108
	expr	go to state 64
	multexpr	go to state 14
	logic	go to state 28

State 63:

	value -> '[' array . ']'	(Rule 56)

	']'	shift, and go to state 109

State 64:

	array -> expr . ',' array	(Rule 18)
	array -> expr .	(Rule 19)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	','	shift, and go to state 110
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 19 (array)

State 65:

	arglist -> argelement . ',' arglist	(Rule 31)
	arglist -> argelement .	(Rule 32)

	','	shift, and go to state 111

	$default	reduce using rule 32 (arglist)

State 66:

	argelement -> NAME . '=' expr 'isa' constraint	(Rule 24)
	argelement -> NAME . 'isa' constraint	(Rule 25)
	argelement -> NAME . '=' expr	(Rule 26)
	argelement -> NAME .	(Rule 27)
	argelement -> NAME . 'byref' 'isa' constraint	(Rule 28)
	argelement -> NAME . 'byref'	(Rule 29)

	'='	shift, and go to state 113
	'byref'	shift, and go to state 112
	'isa'	shift, and go to state 114

	$default	reduce using rule 27 (argelement)

State 67:

	lambda -> '{`' arglist . '`' stma '}'	(Rule 36)

	'`'	shift, and go to state 115

State 68:

	stmt -> NAME ':=' . expr	(Rule 7)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 116
	multexpr	go to state 14
	logic	go to state 28

State 69:

	expr -> NAME '{' . arglist '}' ':=' expr	(Rule 76)
	expr -> NAME '{' . arglist '}' ':=' '{' stma '}'	(Rule 77)

	NAME	shift, and go to state 66

	$default	reduce using rule 30 (argelement)

	arglist	go to state 117
	argelement	go to state 65

State 70:

	stmt -> NAME '=!=' . NAME	(Rule 9)

	NAME	shift, and go to state 118

State 71:

	expr -> NAME '::-' . expr	(Rule 74)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 119
	multexpr	go to state 14
	logic	go to state 28

State 72:

	expr -> NAME ':-' . expr	(Rule 75)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 120
	multexpr	go to state 14
	logic	go to state 28

State 73:

	$start -> stma $end .	(Rule 0)

	$default	accept

State 74:

	stmt -> 'var' NAME .	(Rule 5)
	stmt -> 'var' NAME . '=' expr	(Rule 6)

	'='	shift, and go to state 121

	$default	reduce using rule 5 (stmt)

State 75:

	ifstmts -> '{' . stma '}'	(Rule 14)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'if'	shift, and go to state 11
	'var'	shift, and go to state 21
	'while'	shift, and go to state 23
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 18
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 1 (stma)

	compare	go to state 1
	singleval	go to state 3
	stma	go to state 122
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	ifstartcond	go to state 22
	if	go to state 9
	assignexpr	go to state 7
	stmt	go to state 24
	parens	go to state 10
	while	go to state 26
	expr	go to state 13
	multexpr	go to state 14
	logic	go to state 28

State 76:

	if -> ifstartcond ifstmts .	(Rule 15)
	if -> ifstartcond ifstmts . 'else' ifstmts	(Rule 16)

	'else'	shift, and go to state 123

	$default	reduce using rule 15 (if)

State 77:

	while -> 'while' '(' . expr ')' '{' stma '}'	(Rule 17)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 124
	multexpr	go to state 14
	logic	go to state 28

State 78:

	stma -> stmt ';' . stma	(Rule 3)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'if'	shift, and go to state 11
	'var'	shift, and go to state 21
	'while'	shift, and go to state 23
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 18
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 1 (stma)

	compare	go to state 1
	singleval	go to state 3
	stma	go to state 125
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	ifstartcond	go to state 22
	if	go to state 9
	assignexpr	go to state 7
	stmt	go to state 24
	parens	go to state 10
	while	go to state 26
	expr	go to state 13
	multexpr	go to state 14
	logic	go to state 28

State 79:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	parens -> '(' expr . ')'	(Rule 57)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	')'	shift, and go to state 126
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

State 80:

	value -> singleval '@' array . '$'	(Rule 54)

	'$'	shift, and go to state 127

State 81:

	ifstartcond -> 'if' '(' expr . ')'	(Rule 13)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	')'	shift, and go to state 128
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

State 82:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr '-' expr .	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	$default	reduce using rule 64 (expr)

State 83:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr 'conforms' expr .	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'=='	shift, and go to state 42
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	$default	reduce using rule 70 (expr)

State 84:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr '<' expr .	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 44 (compare)

State 85:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr '**' expr .	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	'**'	shift, and go to state 39
	'^'	shift, and go to state 44

	$default	reduce using rule 69 (expr)

State 86:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr '+' expr .	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	$default	reduce using rule 63 (expr)

State 87:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr '%' expr .	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	'**'	shift, and go to state 39
	'^'	shift, and go to state 44

	$default	reduce using rule 67 (expr)

State 88:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr '==' expr .	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 48 (compare)

State 89:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr '>=' expr .	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 47 (compare)

State 90:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr '^' expr .	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	'**'	shift, and go to state 39
	'^'	shift, and go to state 44

	$default	reduce using rule 68 (expr)

State 91:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	multexpr -> expr ' ' expr .	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	'**'	shift, and go to state 39
	'^'	shift, and go to state 44

	$default	reduce using rule 39 (multexpr)

State 92:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr '*' expr .	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	'**'	shift, and go to state 39
	'^'	shift, and go to state 44

	$default	reduce using rule 37 (multexpr)

State 93:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr 'per' expr .	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44

	$default	reduce using rule 66 (expr)

State 94:

	stmt -> expr ':->' expr .	(Rule 8)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 8 (stmt)

State 95:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	compare -> expr '!=' expr .	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 50 (compare)

State 96:

	stmt -> expr '|||' NAME .	(Rule 10)

	$default	reduce using rule 10 (stmt)

State 97:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr '?' expr . ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	':'	shift, and go to state 129
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

State 98:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr '||' expr .	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'=='	shift, and go to state 42
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'^'	shift, and go to state 44
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47

	$default	reduce using rule 41 (logic)

State 99:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr '&&' expr .	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'=='	shift, and go to state 42
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'^'	shift, and go to state 44
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47

	$default	reduce using rule 40 (logic)

State 100:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	logic -> expr '^^' expr .	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'=='	shift, and go to state 42
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'^'	shift, and go to state 44
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47

	$default	reduce using rule 42 (logic)

State 101:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)
	expr -> expr '->' expr .	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'=='	shift, and go to state 42
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 80 (expr)

State 102:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr '/' expr .	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	'**'	shift, and go to state 39
	'^'	shift, and go to state 44

	$default	reduce using rule 65 (expr)

State 103:

	assignexpr -> expr . '=' expr	(Rule 35)
	assignexpr -> expr '=' expr .	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 35 (assignexpr)

State 104:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr '=>' expr .	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'=='	shift, and go to state 42
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 79 (expr)

State 105:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr '<=>' expr .	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 49 (compare)

State 106:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr '<=' expr .	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 46 (compare)

State 107:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr '>' expr .	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'%'	shift, and go to state 41
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'^'	shift, and go to state 44
	'per'	shift, and go to state 47

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 45 (compare)

State 108:

	array -> ',' array .	(Rule 21)

	$default	reduce using rule 21 (array)

State 109:

	value -> '[' array ']' .	(Rule 56)

	$default	reduce using rule 56 (value)

State 110:

	array -> expr ',' . array	(Rule 18)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	','	shift, and go to state 62
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 20 (array)

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	array	go to state 130
	expr	go to state 64
	multexpr	go to state 14
	logic	go to state 28

State 111:

	arglist -> argelement ',' . arglist	(Rule 31)

	NAME	shift, and go to state 66

	$default	reduce using rule 30 (argelement)

	arglist	go to state 131
	argelement	go to state 65

State 112:

	argelement -> NAME 'byref' . 'isa' constraint	(Rule 28)
	argelement -> NAME 'byref' .	(Rule 29)

	'isa'	shift, and go to state 132

	$default	reduce using rule 29 (argelement)

State 113:

	argelement -> NAME '=' . expr 'isa' constraint	(Rule 24)
	argelement -> NAME '=' . expr	(Rule 26)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 133
	multexpr	go to state 14
	logic	go to state 28

State 114:

	argelement -> NAME 'isa' . constraint	(Rule 25)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'...'	shift, and go to state 136
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 134
	multexpr	go to state 14
	constraint	go to state 135
	logic	go to state 28

State 115:

	lambda -> '{`' arglist '`' . stma '}'	(Rule 36)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'if'	shift, and go to state 11
	'var'	shift, and go to state 21
	'while'	shift, and go to state 23
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 18
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 1 (stma)

	compare	go to state 1
	singleval	go to state 3
	stma	go to state 137
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	ifstartcond	go to state 22
	if	go to state 9
	assignexpr	go to state 7
	stmt	go to state 24
	parens	go to state 10
	while	go to state 26
	expr	go to state 13
	multexpr	go to state 14
	logic	go to state 28

State 116:

	stmt -> NAME ':=' expr .	(Rule 7)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 7 (stmt)

State 117:

	expr -> NAME '{' arglist . '}' ':=' expr	(Rule 76)
	expr -> NAME '{' arglist . '}' ':=' '{' stma '}'	(Rule 77)

	'}'	shift, and go to state 138

State 118:

	stmt -> NAME '=!=' NAME .	(Rule 9)

	$default	reduce using rule 9 (stmt)

State 119:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> NAME '::-' expr .	(Rule 74)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 74 (expr)

State 120:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> NAME ':-' expr .	(Rule 75)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 75 (expr)

State 121:

	stmt -> 'var' NAME '=' . expr	(Rule 6)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 139
	multexpr	go to state 14
	logic	go to state 28

State 122:

	ifstmts -> '{' stma . '}'	(Rule 14)

	'}'	shift, and go to state 140

State 123:

	if -> ifstartcond ifstmts 'else' . ifstmts	(Rule 16)

	'{'	shift, and go to state 75

	ifstmts	go to state 141

State 124:

	while -> 'while' '(' expr . ')' '{' stma '}'	(Rule 17)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	')'	shift, and go to state 142
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

State 125:

	stma -> stmt ';' stma .	(Rule 3)

	$default	reduce using rule 3 (stma)

State 126:

	parens -> '(' expr ')' .	(Rule 57)

	$default	reduce using rule 57 (parens)

State 127:

	value -> singleval '@' array '$' .	(Rule 54)

	$default	reduce using rule 54 (value)

State 128:

	ifstartcond -> 'if' '(' expr ')' .	(Rule 13)

	$default	reduce using rule 13 (ifstartcond)

State 129:

	expr -> expr '?' expr ':' . expr	(Rule 71)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 143
	multexpr	go to state 14
	logic	go to state 28

State 130:

	array -> expr ',' array .	(Rule 18)

	$default	reduce using rule 18 (array)

State 131:

	arglist -> argelement ',' arglist .	(Rule 31)

	$default	reduce using rule 31 (arglist)

State 132:

	argelement -> NAME 'byref' 'isa' . constraint	(Rule 28)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'...'	shift, and go to state 136
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 134
	multexpr	go to state 14
	constraint	go to state 144
	logic	go to state 28

State 133:

	argelement -> NAME '=' expr . 'isa' constraint	(Rule 24)
	argelement -> NAME '=' expr .	(Rule 26)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'isa'	shift, and go to state 145
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 26 (argelement)

State 134:

	constraint -> expr .	(Rule 22)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 22 (constraint)

State 135:

	argelement -> NAME 'isa' constraint .	(Rule 25)

	$default	reduce using rule 25 (argelement)

State 136:

	constraint -> '...' .	(Rule 23)

	$default	reduce using rule 23 (constraint)

State 137:

	lambda -> '{`' arglist '`' stma . '}'	(Rule 36)

	'}'	shift, and go to state 146

State 138:

	expr -> NAME '{' arglist '}' . ':=' expr	(Rule 76)
	expr -> NAME '{' arglist '}' . ':=' '{' stma '}'	(Rule 77)

	':='	shift, and go to state 147

State 139:

	stmt -> 'var' NAME '=' expr .	(Rule 6)
	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 6 (stmt)

State 140:

	ifstmts -> '{' stma '}' .	(Rule 14)

	$default	reduce using rule 14 (ifstmts)

State 141:

	if -> ifstartcond ifstmts 'else' ifstmts .	(Rule 16)

	$default	reduce using rule 16 (if)

State 142:

	while -> 'while' '(' expr ')' . '{' stma '}'	(Rule 17)

	'{'	shift, and go to state 148

State 143:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> expr '?' expr ':' expr .	(Rule 71)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'=='	shift, and go to state 42
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 71 (expr)

State 144:

	argelement -> NAME 'byref' 'isa' constraint .	(Rule 28)

	$default	reduce using rule 28 (argelement)

State 145:

	argelement -> NAME '=' expr 'isa' . constraint	(Rule 24)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'...'	shift, and go to state 136
	'['	shift, and go to state 15
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 134
	multexpr	go to state 14
	constraint	go to state 149
	logic	go to state 28

State 146:

	lambda -> '{`' arglist '`' stma '}' .	(Rule 36)

	$default	reduce using rule 36 (lambda)

State 147:

	expr -> NAME '{' arglist '}' ':=' . expr	(Rule 76)
	expr -> NAME '{' arglist '}' ':=' . '{' stma '}'	(Rule 77)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'{'	shift, and go to state 151
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 30
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	compare	go to state 1
	singleval	go to state 3
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	assignexpr	go to state 7
	parens	go to state 10
	expr	go to state 150
	multexpr	go to state 14
	logic	go to state 28

State 148:

	while -> 'while' '(' expr ')' '{' . stma '}'	(Rule 17)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'if'	shift, and go to state 11
	'var'	shift, and go to state 21
	'while'	shift, and go to state 23
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 18
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 1 (stma)

	compare	go to state 1
	singleval	go to state 3
	stma	go to state 152
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	ifstartcond	go to state 22
	if	go to state 9
	assignexpr	go to state 7
	stmt	go to state 24
	parens	go to state 10
	while	go to state 26
	expr	go to state 13
	multexpr	go to state 14
	logic	go to state 28

State 149:

	argelement -> NAME '=' expr 'isa' constraint .	(Rule 24)

	$default	reduce using rule 24 (argelement)

State 150:

	assignexpr -> expr . '=' expr	(Rule 35)
	multexpr -> expr . '*' expr	(Rule 37)
	multexpr -> expr . ' ' expr	(Rule 39)
	logic -> expr . '&&' expr	(Rule 40)
	logic -> expr . '||' expr	(Rule 41)
	logic -> expr . '^^' expr	(Rule 42)
	compare -> expr . '<' expr	(Rule 44)
	compare -> expr . '>' expr	(Rule 45)
	compare -> expr . '<=' expr	(Rule 46)
	compare -> expr . '>=' expr	(Rule 47)
	compare -> expr . '==' expr	(Rule 48)
	compare -> expr . '<=>' expr	(Rule 49)
	compare -> expr . '!=' expr	(Rule 50)
	expr -> expr . '+' expr	(Rule 63)
	expr -> expr . '-' expr	(Rule 64)
	expr -> expr . '/' expr	(Rule 65)
	expr -> expr . 'per' expr	(Rule 66)
	expr -> expr . '%' expr	(Rule 67)
	expr -> expr . '^' expr	(Rule 68)
	expr -> expr . '**' expr	(Rule 69)
	expr -> expr . 'conforms' expr	(Rule 70)
	expr -> expr . '?' expr ':' expr	(Rule 71)
	expr -> NAME '{' arglist '}' ':=' expr .	(Rule 76)
	expr -> expr . '=>' expr	(Rule 79)
	expr -> expr . '->' expr	(Rule 80)

	' '	shift, and go to state 45
	'!='	shift, and go to state 49
	'%'	shift, and go to state 41
	'&&'	shift, and go to state 53
	'*'	shift, and go to state 46
	'**'	shift, and go to state 39
	'+'	shift, and go to state 40
	'-'	shift, and go to state 36
	'->'	shift, and go to state 55
	'/'	shift, and go to state 56
	'<'	shift, and go to state 38
	'<='	shift, and go to state 60
	'<=>'	shift, and go to state 59
	'='	shift, and go to state 57
	'=='	shift, and go to state 42
	'=>'	shift, and go to state 58
	'>'	shift, and go to state 61
	'>='	shift, and go to state 43
	'?'	shift, and go to state 51
	'^'	shift, and go to state 44
	'^^'	shift, and go to state 54
	'conforms'	shift, and go to state 37
	'per'	shift, and go to state 47
	'||'	shift, and go to state 52

	$default	reduce using rule 76 (expr)

State 151:

	expr -> NAME '{' arglist '}' ':=' '{' . stma '}'	(Rule 77)

	'!'	shift, and go to state 12
	'('	shift, and go to state 25
	'-'	shift, and go to state 2
	'['	shift, and go to state 15
	'if'	shift, and go to state 11
	'var'	shift, and go to state 21
	'while'	shift, and go to state 23
	'{`'	shift, and go to state 17
	DATE	shift, and go to state 6
	HEXNUMBER	shift, and go to state 27
	NAME	shift, and go to state 18
	NUMBER	shift, and go to state 16
	STRING	shift, and go to state 8

	$default	reduce using rule 1 (stma)

	compare	go to state 1
	singleval	go to state 3
	stma	go to state 153
	number	go to state 5
	lambda	go to state 4
	value	go to state 20
	ifstartcond	go to state 22
	if	go to state 9
	assignexpr	go to state 7
	stmt	go to state 24
	parens	go to state 10
	while	go to state 26
	expr	go to state 13
	multexpr	go to state 14
	logic	go to state 28

State 152:

	while -> 'while' '(' expr ')' '{' stma . '}'	(Rule 17)

	'}'	shift, and go to state 154

State 153:

	expr -> NAME '{' arglist '}' ':=' '{' stma . '}'	(Rule 77)

	'}'	shift, and go to state 155

State 154:

	while -> 'while' '(' expr ')' '{' stma '}' .	(Rule 17)

	$default	reduce using rule 17 (while)

State 155:

	expr -> NAME '{' arglist '}' ':=' '{' stma '}' .	(Rule 77)

	$default	reduce using rule 77 (expr)


Summary:
--------
Number of rules         : 82
Number of terminals     : 62
Number of non-terminals : 21
Number of states        : 156
